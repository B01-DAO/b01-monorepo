/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NounsSeeder, NounsSeederInterface } from "../NounsSeeder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
      {
        internalType: "contract INounsDescriptor",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "volumeCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxVolumeHeight",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "waterFeatureCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "grassFeatureCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "treeCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "bushCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "peopleCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "timeOfDay",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "season",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "greenRooftopP",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "siteEdgeOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orientation",
            type: "uint256",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063422e2e9914610030575b600080fd5b61004361003e36600461057b565b610059565b60405161005091906105c4565b60405180910390f35b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906100c5600143610707565b604080519140602083015281018590526060016040516020818303038152906040528051906020012060001c905060008373ffffffffffffffffffffffffffffffffffffffff16630323f0776040518163ffffffff1660e01b81526004016103006040518083038186803b15801561013c57600080fd5b505afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610174919061047c565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091528151805192935090916101f29185919060015b6020020151610374565b60ff1681526020820151805161021091601086901c919060016101e8565b60ff16602082810191909152604083015180516102329286901c9160016101e8565b60ff1660408201526060820151805161025391603086901c919060016101e8565b60ff1660608201526080820151805161027491604086901c919060016101e8565b60ff16608082015260a0820151805161029591605086901c919060016101e8565b60ff1660a082015260c082015180516102b691606086901c919060016101e8565b60ff1660c082015260e082015180516102d791607086901c919060016101e8565b60ff1660e082015261010082015180516102f991608086901c919060016101e8565b60ff16610100820152610120820151805161031c91609086901c919060006101e8565b60ff1661012082015261014082015180516103459160a086901c919060015b602002015161038f565b61014082015261016082015180516103659160b086901c9190600161033b565b61016082015295945050505050565b6000610387848460ff168460ff1661038f565b949350505050565b60008261039c8184610707565b6103a79060016106ef565b6103b1908661071e565b61038791906106ef565b600082601f8301126103cc57600080fd5b6103d46106cc565b8083856040860111156103e657600080fd5b60005b60028110156104085781518452602093840193909101906001016103e9565b509095945050505050565b600082601f83011261042457600080fd5b61042c6106cc565b80838560408601111561043e57600080fd5b6000805b600281101561047057825160ff8116811461045b578283fd5b85526020948501949290920191600101610442565b50919695505050505050565b6000610300828403121561048f57600080fd5b6104976106a2565b6104a18484610413565b81526104b08460408501610413565b60208201526104c28460808501610413565b60408201526104d48460c08501610413565b60608201526101006104e885828601610413565b60808301526101406104fc86828701610413565b60a084015261050f866101808701610413565b60c0840152610522866101c08701610413565b60e0840152610535866102008701610413565b82840152610547866102408701610413565b61012084015261055b8661028087016103bb565b908301525061056e846102c085016103bb565b6101608201529392505050565b6000806040838503121561058e57600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff811681146105b957600080fd5b809150509250929050565b815160ff168152610180810160208301516105e4602084018260ff169052565b5060408301516105f9604084018260ff169052565b50606083015161060e606084018260ff169052565b506080830151610623608084018260ff169052565b5060a083015161063860a084018260ff169052565b5060c083015161064d60c084018260ff169052565b5060e083015161066260e084018260ff169052565b506101008381015160ff81168483015250506101208381015160ff8116848301525050610140838101519083015261016092830151929091019190915290565b604051610180810167ffffffffffffffff811182821017156106c6576106c6610788565b60405290565b6040805190810167ffffffffffffffff811182821017156106c6576106c6610788565b6000821982111561070257610702610759565b500190565b60008282101561071957610719610759565b500390565b600082610754577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220c6884867ddfa066f1529fa0039f857e943519851f5222e64dc12ae7d5118a77164736f6c63430008060033";

type NounsSeederConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsSeederConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsSeeder__factory extends ContractFactory {
  constructor(...args: NounsSeederConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NounsSeeder";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsSeeder> {
    return super.deploy(overrides || {}) as Promise<NounsSeeder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NounsSeeder {
    return super.attach(address) as NounsSeeder;
  }
  connect(signer: Signer): NounsSeeder__factory {
    return super.connect(signer) as NounsSeeder__factory;
  }
  static readonly contractName: "NounsSeeder";
  public readonly contractName: "NounsSeeder";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsSeederInterface {
    return new utils.Interface(_abi) as NounsSeederInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsSeeder {
    return new Contract(address, _abi, signerOrProvider) as NounsSeeder;
  }
}
