/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NounsDescriptor,
  NounsDescriptorInterface,
} from "../NounsDescriptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    inputs: [],
    name: "arePartsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttributeRanges",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[2]",
            name: "volumeCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "maxVolumeHeightRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "waterFeatureCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "grassFeatureCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "treeCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "bushCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "peopleCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "lightingRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "seasonRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "environmentRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "greenRooftopPRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint256[2]",
            name: "siteEdgeOffsetRange",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2]",
            name: "orientationRange",
            type: "uint256[2]",
          },
        ],
        internalType: "struct INounsDescriptor.AttributeRanges",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBushCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEnvironmentRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGrassFeatureCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGreenRooftopPRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxVolumeHeightRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrientationRange",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeopleCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeasonRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSiteEdgeOffsetRange",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimeOfDayRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreeCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVolumeCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWaterFeatureCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type NounsDescriptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsDescriptor__factory extends ContractFactory {
  constructor(...args: NounsDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NounsDescriptor";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsDescriptor> {
    return super.deploy(overrides || {}) as Promise<NounsDescriptor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NounsDescriptor {
    return super.attach(address) as NounsDescriptor;
  }
  connect(signer: Signer): NounsDescriptor__factory {
    return super.connect(signer) as NounsDescriptor__factory;
  }
  static readonly contractName: "NounsDescriptor";
  public readonly contractName: "NounsDescriptor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDescriptorInterface {
    return new utils.Interface(_abi) as NounsDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NounsDescriptor;
  }
}
