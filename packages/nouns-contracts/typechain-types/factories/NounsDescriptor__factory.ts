/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NounsDescriptor,
  NounsDescriptorInterface,
} from "../NounsDescriptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    inputs: [],
    name: "arePartsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttributeRanges",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[2]",
            name: "volumeCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "maxVolumeHeightRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "waterFeatureCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "grassFeatureCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "treeCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "bushCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "peopleCountRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "timeOfDayRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "seasonRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint8[2]",
            name: "greenRooftopPRange",
            type: "uint8[2]",
          },
          {
            internalType: "uint256[2]",
            name: "siteEdgeOffsetRange",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2]",
            name: "orientationRange",
            type: "uint256[2]",
          },
        ],
        internalType: "struct INounsDescriptor.AttributeRanges",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBushCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGrassFeatureCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGreenRooftopPRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxVolumeHeightRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrientationRange",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeopleCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeasonRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSiteEdgeOffsetRange",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimeOfDayRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreeCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVolumeCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWaterFeatureCountRange",
    outputs: [
      {
        internalType: "uint8[2]",
        name: "",
        type: "uint8[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60026102008181526028610220526080818152600561024081815260086102605260a052610280818152600a6102a081905260c0919091526102c08281526102e09190915260e0526103008481526014610320819052610100919091526000610340818152606461036052610120526103809283526103a091909152610140919091526103c08181526103e0859052610160526104008181526003610420526101805261044081815260ff610460526101a052633b9aca0061048090815263b2d05e006104a0526101c0526105006040526104c090815264174876e8006104e0526101e05291600191620000f69183919062000274565b5060208201516200010e906001830190600262000274565b50604082015162000126906002808401919062000274565b5060608201516200013e906003830190600262000274565b50608082015162000156906004830190600262000274565b5060a08201516200016e906005830190600262000274565b5060c082015162000186906006830190600262000274565b5060e08201516200019e906007830190600262000274565b50610100820151620001b7906008830190600262000274565b50610120820151620001d0906009830190600262000274565b50610140820151620001e990600a83019060026200030e565b506101608201516200020290600c83019060026200030e565b5050503480156200021257600080fd5b506200021e3362000224565b62000356565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620002fc5791602002820160005b83821115620002cb57835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026200028b565b8015620002fa5782816101000a81549060ff0219169055600101602081600001049283019260010302620002cb565b505b506200030a9291506200033f565b5090565b8260028101928215620002fc579160200282015b82811115620002fc57825182559160200191906001019062000322565b5b808211156200030a576000815560010162000340565b610f6380620003666000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063773b9771116100b2578063c751a7b711610081578063f2fde38b11610066578063f2fde38b14610232578063fd05a19c14610245578063fff98e3a1461024d57600080fd5b8063c751a7b714610222578063e6ccf5751461022a57600080fd5b8063773b9771146101b557806383a9f837146101ea5780638da5cb5b146101f2578063c3eeb56e1461021a57600080fd5b80632a1d0769116101095780635179d837116100ee5780635179d8371461019d5780635bcc7f16146101a5578063715018a6146101ad57600080fd5b80632a1d07691461017e5780634fa15e431461018857600080fd5b80630323f0771461013b578063051df15e1461015957806317815b2b1461016e57806321f3d53414610176575b600080fd5b610143610255565b6040516101509190610e31565b60405180910390f35b61016161061e565b6040516101509190610e1d565b610161610675565b6101616106b0565b6101866106ea565b005b61019061085d565b6040516101509190610dec565b610161610897565b6101616108d2565b61018661090d565b6000546101da9074010000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610150565b61016161099a565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101616109d5565b610161610a0f565b610161610a4a565b610186610240366004610d60565b610a85565b610161610bb5565b610190610bf0565b61025d610c9a565b604080516101c0810190915260018161018081018260028282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610281575050509284525050604080518082019182905260209093019291506001840190600290826000855b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116102d557505050928452505060408051808201918290526020909301929150600284810191826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610327575050509284525050604080518082019182905260209093019291506003840190600290826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161037b575050509284525050604080518082019182905260209093019291506004840190600290826000855b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116103cf575050509284525050604080518082019182905260209093019291506005840190600290826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610423575050509284525050604080518082019182905260209093019291506006840190600290826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610477575050509284525050604080518082019182905260209093019291506007840190600290826000855b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116104cb575050509284525050604080518082019182905260209093019291506008840190600290826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161051f575050509284525050604080518082019182905260209093019291506009840190600290826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161057357505050928452505060408051808201918290526020909301929150600a84019060029082845b8154815260200190600101908083116105c5575050509183525050604080518082019182905260209092019190600c84019060029082845b8154815260200190600101908083116105fd57505050505081525050905090565b610626610d42565b604080518082019182905290600a90600290826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161063d5790505050505050905090565b61067d610d42565b60408051808201918290526006805460ff16825290916002908260016020860180841161063d5790505050505050905090565b6106b8610d42565b60408051808201918290526002805460ff168252909181908160016020860180841161063d5790505050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005474010000000000000000000000000000000000000000900460ff16156107f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610767565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001781556040517f1680ee6d421f70ed6030d2fc4fcb50217a5dd617858d56562b119eca59172e579190a1565b610865610d42565b604080518082019182905290600b9060029082845b81548152602001906001019080831161087a575050505050905090565b61089f610d42565b60408051808201918290526009805460ff16825290916002908260016020860180841161063d5790505050505050905090565b6108da610d42565b60408051808201918290526003805460ff16825290916002908260016020860180841161063d5790505050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff16331461098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610767565b6109986000610c25565b565b6109a2610d42565b60408051808201918290526005805460ff16825290916002908260016020860180841161063d5790505050505050905090565b6109dd610d42565b60408051808201918290526001805460ff168252909160029082806020860180841161063d5790505050505050905090565b610a17610d42565b60408051808201918290526007805460ff16825290916002908260016020860180841161063d5790505050505050905090565b610a52610d42565b60408051808201918290526008805460ff16825290916002908260016020860180841161063d5790505050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610767565b73ffffffffffffffffffffffffffffffffffffffff8116610ba9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610767565b610bb281610c25565b50565b610bbd610d42565b60408051808201918290526004805460ff16825290916002908260016020860180841161063d5790505050505050905090565b610bf8610d42565b6040805180820191829052600d805482529091600290600e6020850180831161087a575050505050905090565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806101800160405280610cae610d42565b8152602001610cbb610d42565b8152602001610cc8610d42565b8152602001610cd5610d42565b8152602001610ce2610d42565b8152602001610cef610d42565b8152602001610cfc610d42565b8152602001610d09610d42565b8152602001610d16610d42565b8152602001610d23610d42565b8152602001610d30610d42565b8152602001610d3d610d42565b905290565b60405180604001604052806002906020820280368337509192915050565b600060208284031215610d7257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610d9657600080fd5b9392505050565b8060005b6002811015610dc0578151845260209384019390910190600101610da1565b50505050565b8060005b6002811015610dc057815160ff16845260209384019390910190600101610dca565b60408101818360005b6002811015610e14578151835260209283019290910190600101610df5565b50505092915050565b60408101610e2b8284610dc6565b92915050565b600061030082019050610e45828451610dc6565b6020830151610e576040840182610dc6565b506040830151610e6a6080840182610dc6565b506060830151610e7d60c0840182610dc6565b506080830151610100610e9281850183610dc6565b60a08501519150610140610ea881860184610dc6565b60c08601519250610ebd610180860184610dc6565b60e08601519250610ed26101c0860184610dc6565b818601519250610ee6610200860184610dc6565b6101208601519250610efc610240860184610dc6565b8501519150610f119050610280840182610d9d565b50610160830151610f266102c0840182610d9d565b509291505056fea26469706673582212206ef6ec718ad81e8faec60d8a3de16bde07020b2d1e8f4bd17e13e01bcf255ec664736f6c63430008060033";

type NounsDescriptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsDescriptor__factory extends ContractFactory {
  constructor(...args: NounsDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NounsDescriptor";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsDescriptor> {
    return super.deploy(overrides || {}) as Promise<NounsDescriptor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NounsDescriptor {
    return super.attach(address) as NounsDescriptor;
  }
  connect(signer: Signer): NounsDescriptor__factory {
    return super.connect(signer) as NounsDescriptor__factory;
  }
  static readonly contractName: "NounsDescriptor";
  public readonly contractName: "NounsDescriptor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDescriptorInterface {
    return new utils.Interface(_abi) as NounsDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NounsDescriptor;
  }
}
